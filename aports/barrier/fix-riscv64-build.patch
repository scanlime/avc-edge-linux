This is an upstream patch which fixes the build on riscv64.

From bd0c671fcc9732c9d1ccf5216f34f4629640b9fb Mon Sep 17 00:00:00 2001
From: Balint Reczey <balint.reczey@canonical.com>
Date: Thu, 22 Oct 2020 22:00:18 +0200
Subject: [PATCH] lib/ipc: Introduce writef_void(void*, ...)

to fix ambiguity with writef(barrier::IStream*, ...)
---
 src/lib/barrier/ProtocolUtil.cpp | 4 ++--
 src/lib/barrier/ProtocolUtil.h   | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/lib/barrier/ProtocolUtil.cpp b/src/lib/barrier/ProtocolUtil.cpp
index e742687f1..21ba38fcd 100644
--- a/src/lib/barrier/ProtocolUtil.cpp
+++ b/src/lib/barrier/ProtocolUtil.cpp
@@ -80,7 +80,7 @@ ProtocolUtil::vwritef(barrier::IStream* stream,
 
     // fill buffer
     UInt8* buffer = new UInt8[size];
-    writef(buffer, fmt, args);
+    writef_void(buffer, fmt, args);
 
     try {
         // write buffer
@@ -339,7 +339,7 @@ ProtocolUtil::getLength(const char* fmt, va_list args)
 }
 
 void
-ProtocolUtil::writef(void* buffer, const char* fmt, va_list args)
+ProtocolUtil::writef_void(void* buffer, const char* fmt, va_list args)
 {
     UInt8* dst = static_cast<UInt8*>(buffer);
 
diff --git a/src/lib/barrier/ProtocolUtil.h b/src/lib/barrier/ProtocolUtil.h
index 9930cfc0b..e01a6e608 100644
--- a/src/lib/barrier/ProtocolUtil.h
+++ b/src/lib/barrier/ProtocolUtil.h
@@ -79,7 +79,7 @@ class ProtocolUtil {
                             const char* fmt, va_list);
 
     static UInt32        getLength(const char* fmt, va_list);
-    static void            writef(void*, const char* fmt, va_list);
+    static void            writef_void(void*, const char* fmt, va_list);
     static UInt32        eatLength(const char** fmt);
     static void            read(barrier::IStream*, void*, UInt32);
 };
